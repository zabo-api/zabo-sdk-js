// source: finance.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.Balance', null, global);
goog.exportSymbol('proto.BaseRequestData', null, global);
goog.exportSymbol('proto.TradeRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.BaseRequestData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.BaseRequestData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.BaseRequestData.displayName = 'proto.BaseRequestData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.Balance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.Balance.repeatedFields_, null);
};
goog.inherits(proto.Balance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.Balance.displayName = 'proto.Balance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.TradeRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.TradeRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.TradeRequest.displayName = 'proto.TradeRequest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.BaseRequestData.prototype.toObject = function(opt_includeInstance) {
  return proto.BaseRequestData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.BaseRequestData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BaseRequestData.toObject = function(includeInstance, msg) {
  var f, obj = {
    tokenInputOne: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tokenInputTwo: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tokenInputThree: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pageLimit: jspb.Message.getFieldWithDefault(msg, 4, ""),
    afterCursor: jspb.Message.getFieldWithDefault(msg, 5, ""),
    beforeCursor: jspb.Message.getFieldWithDefault(msg, 6, ""),
    resourceCode: jspb.Message.getFieldWithDefault(msg, 7, ""),
    genericIdOne: jspb.Message.getFieldWithDefault(msg, 8, ""),
    genericIdTwo: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.BaseRequestData}
 */
proto.BaseRequestData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.BaseRequestData;
  return proto.BaseRequestData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.BaseRequestData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.BaseRequestData}
 */
proto.BaseRequestData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenInputOne(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenInputTwo(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setTokenInputThree(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageLimit(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAfterCursor(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setBeforeCursor(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceCode(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGenericIdOne(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setGenericIdTwo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.BaseRequestData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.BaseRequestData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.BaseRequestData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.BaseRequestData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTokenInputOne();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTokenInputTwo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTokenInputThree();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPageLimit();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAfterCursor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getBeforeCursor();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getResourceCode();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGenericIdOne();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getGenericIdTwo();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string token_input_one = 1;
 * @return {string}
 */
proto.BaseRequestData.prototype.getTokenInputOne = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setTokenInputOne = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string token_input_two = 2;
 * @return {string}
 */
proto.BaseRequestData.prototype.getTokenInputTwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setTokenInputTwo = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string token_input_three = 3;
 * @return {string}
 */
proto.BaseRequestData.prototype.getTokenInputThree = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setTokenInputThree = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string page_limit = 4;
 * @return {string}
 */
proto.BaseRequestData.prototype.getPageLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setPageLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string after_cursor = 5;
 * @return {string}
 */
proto.BaseRequestData.prototype.getAfterCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setAfterCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string before_cursor = 6;
 * @return {string}
 */
proto.BaseRequestData.prototype.getBeforeCursor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setBeforeCursor = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string resource_code = 7;
 * @return {string}
 */
proto.BaseRequestData.prototype.getResourceCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setResourceCode = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string generic_id_one = 8;
 * @return {string}
 */
proto.BaseRequestData.prototype.getGenericIdOne = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setGenericIdOne = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string generic_id_two = 9;
 * @return {string}
 */
proto.BaseRequestData.prototype.getGenericIdTwo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.BaseRequestData} returns this
 */
proto.BaseRequestData.prototype.setGenericIdTwo = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.Balance.repeatedFields_ = [11,15];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.Balance.prototype.toObject = function(opt_includeInstance) {
  return proto.Balance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.Balance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Balance.toObject = function(includeInstance, msg) {
  var f, obj = {
    ticker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    amount: jspb.Message.getFieldWithDefault(msg, 2, ""),
    assetType: jspb.Message.getFieldWithDefault(msg, 3, ""),
    decimals: jspb.Message.getFieldWithDefault(msg, 4, 0),
    availableAmount: jspb.Message.getFieldWithDefault(msg, 5, ""),
    name: jspb.Message.getFieldWithDefault(msg, 6, ""),
    logo: jspb.Message.getFieldWithDefault(msg, 7, ""),
    value: jspb.Message.getFieldWithDefault(msg, 8, ""),
    valueTicker: jspb.Message.getFieldWithDefault(msg, 9, ""),
    valueAssetType: jspb.Message.getFieldWithDefault(msg, 10, ""),
    miscList: (f = jspb.Message.getRepeatedField(msg, 11)) == null ? undefined : f,
    updatedAt: jspb.Message.getFieldWithDefault(msg, 12, ""),
    resourceType: jspb.Message.getFieldWithDefault(msg, 13, ""),
    fieldErrorsMap: (f = msg.getFieldErrorsMap()) ? f.toObject(includeInstance, undefined) : [],
    expectedFieldsNotFoundList: (f = jspb.Message.getRepeatedField(msg, 15)) == null ? undefined : f,
    rawProviderResponse: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.Balance}
 */
proto.Balance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.Balance;
  return proto.Balance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.Balance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.Balance}
 */
proto.Balance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTicker(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssetType(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setDecimals(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAvailableAmount(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogo(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueTicker(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setValueAssetType(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.addMisc(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setUpdatedAt(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setResourceType(value);
      break;
    case 14:
      var value = msg.getFieldErrorsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.addExpectedFieldsNotFound(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRawProviderResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.Balance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.Balance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.Balance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.Balance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAmount();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAssetType();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDecimals();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getAvailableAmount();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLogo();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getValueTicker();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getValueAssetType();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getMiscList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      11,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getResourceType();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getFieldErrorsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(14, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getExpectedFieldsNotFoundList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      15,
      f
    );
  }
  f = message.getRawProviderResponse();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string ticker = 1;
 * @return {string}
 */
proto.Balance.prototype.getTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string amount = 2;
 * @return {string}
 */
proto.Balance.prototype.getAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string asset_type = 3;
 * @return {string}
 */
proto.Balance.prototype.getAssetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setAssetType = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int64 decimals = 4;
 * @return {number}
 */
proto.Balance.prototype.getDecimals = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setDecimals = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string available_amount = 5;
 * @return {string}
 */
proto.Balance.prototype.getAvailableAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setAvailableAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string name = 6;
 * @return {string}
 */
proto.Balance.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string logo = 7;
 * @return {string}
 */
proto.Balance.prototype.getLogo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setLogo = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string value = 8;
 * @return {string}
 */
proto.Balance.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string value_ticker = 9;
 * @return {string}
 */
proto.Balance.prototype.getValueTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setValueTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string value_asset_type = 10;
 * @return {string}
 */
proto.Balance.prototype.getValueAssetType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setValueAssetType = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * repeated string misc = 11;
 * @return {!Array<string>}
 */
proto.Balance.prototype.getMiscList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 11));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setMiscList = function(value) {
  return jspb.Message.setField(this, 11, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.addMisc = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 11, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.clearMiscList = function() {
  return this.setMiscList([]);
};


/**
 * optional string updated_at = 12;
 * @return {string}
 */
proto.Balance.prototype.getUpdatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string resource_type = 13;
 * @return {string}
 */
proto.Balance.prototype.getResourceType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setResourceType = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * map<string, string> field_errors = 14;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.Balance.prototype.getFieldErrorsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 14, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.clearFieldErrorsMap = function() {
  this.getFieldErrorsMap().clear();
  return this;};


/**
 * repeated string expected_fields_not_found = 15;
 * @return {!Array<string>}
 */
proto.Balance.prototype.getExpectedFieldsNotFoundList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 15));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setExpectedFieldsNotFoundList = function(value) {
  return jspb.Message.setField(this, 15, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.addExpectedFieldsNotFound = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 15, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.clearExpectedFieldsNotFoundList = function() {
  return this.setExpectedFieldsNotFoundList([]);
};


/**
 * optional string raw_provider_response = 16;
 * @return {string}
 */
proto.Balance.prototype.getRawProviderResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.Balance} returns this
 */
proto.Balance.prototype.setRawProviderResponse = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.TradeRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.TradeRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.TradeRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TradeRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseTicker: jspb.Message.getFieldWithDefault(msg, 1, ""),
    quoteTicker: jspb.Message.getFieldWithDefault(msg, 2, ""),
    baseAmount: jspb.Message.getFieldWithDefault(msg, 3, ""),
    quoteAmount: jspb.Message.getFieldWithDefault(msg, 4, ""),
    orderType: jspb.Message.getFieldWithDefault(msg, 5, ""),
    side: jspb.Message.getFieldWithDefault(msg, 6, ""),
    priceLimit: jspb.Message.getFieldWithDefault(msg, 7, ""),
    timeInForce: jspb.Message.getFieldWithDefault(msg, 8, ""),
    timeToLive: jspb.Message.getFieldWithDefault(msg, 9, ""),
    provideLiquidityOnly: jspb.Message.getBooleanFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.TradeRequest}
 */
proto.TradeRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.TradeRequest;
  return proto.TradeRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.TradeRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.TradeRequest}
 */
proto.TradeRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseTicker(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteTicker(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseAmount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuoteAmount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderType(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setSide(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceLimit(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeInForce(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setTimeToLive(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setProvideLiquidityOnly(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.TradeRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.TradeRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.TradeRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.TradeRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBaseTicker();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuoteTicker();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBaseAmount();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getQuoteAmount();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOrderType();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSide();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPriceLimit();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getTimeInForce();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getTimeToLive();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getProvideLiquidityOnly();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * optional string base_ticker = 1;
 * @return {string}
 */
proto.TradeRequest.prototype.getBaseTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setBaseTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string quote_ticker = 2;
 * @return {string}
 */
proto.TradeRequest.prototype.getQuoteTicker = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setQuoteTicker = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string base_amount = 3;
 * @return {string}
 */
proto.TradeRequest.prototype.getBaseAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setBaseAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string quote_amount = 4;
 * @return {string}
 */
proto.TradeRequest.prototype.getQuoteAmount = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setQuoteAmount = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string order_type = 5;
 * @return {string}
 */
proto.TradeRequest.prototype.getOrderType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setOrderType = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string side = 6;
 * @return {string}
 */
proto.TradeRequest.prototype.getSide = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setSide = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string price_limit = 7;
 * @return {string}
 */
proto.TradeRequest.prototype.getPriceLimit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setPriceLimit = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string time_in_force = 8;
 * @return {string}
 */
proto.TradeRequest.prototype.getTimeInForce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setTimeInForce = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string time_to_live = 9;
 * @return {string}
 */
proto.TradeRequest.prototype.getTimeToLive = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setTimeToLive = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool provide_liquidity_only = 10;
 * @return {boolean}
 */
proto.TradeRequest.prototype.getProvideLiquidityOnly = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.TradeRequest} returns this
 */
proto.TradeRequest.prototype.setProvideLiquidityOnly = function(value) {
  return jspb.Message.setProto3BooleanField(this, 10, value);
};


goog.object.extend(exports, proto);
